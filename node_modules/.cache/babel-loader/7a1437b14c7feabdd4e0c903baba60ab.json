{"ast":null,"code":"var _jsxFileName = \"/home/gopal.salunkhe/Desktop/snackGame/snackgame/src/component/snackgame/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SnackGame = () => {\n  _s();\n\n  let blockMaping = require(\"../../json/maping.json\");\n\n  const [playerOneActiveIndex, setPlayerOneActiveIndex] = useState(1);\n  const [playerTwoActiveIndex, setPlayerTwoActiveIndex] = useState(1);\n  const [playerOneDice, setPlayerOneDice] = useState(0);\n  const [playerTwoDice, setPlayerTwoDice] = useState(0);\n  const [activePlayer, setActivePlayer] = useState(\"playerOne\");\n\n  const diceClick = player => {\n    debugger;\n\n    if (player == \"playerOne\" && activePlayer == \"playerOne\") {\n      let randomNumber = Math.floor(Math.random() * 6) + 1;\n      setPlayerOneDice(randomNumber);\n      setActivePlayer(\"playerTwo\");\n\n      if (playerOneActiveIndex + randomNumber <= 100) {\n        setPlayerOneActiveIndex(playerOneActiveIndex + randomNumber);\n      } else if (playerOneActiveIndex == 100) {\n        alert(\"player One win\");\n      }\n    } else if (player == \"playerTwo\" && activePlayer == \"playerTwo\") {\n      let randomNumber = Math.floor(Math.random() * 6) + 1;\n      setPlayerTwoDice(randomNumber);\n      setActivePlayer(\"playerOne\");\n\n      if (playerTwoActiveIndex + randomNumber <= 100) {\n        setPlayerTwoActiveIndex(playerTwoActiveIndex + randomNumber);\n      } else if (playerTwoActiveIndex == 100) {\n        alert(\"player Two win\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"snake-game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playerOne\",\n      children: [\"playerOne\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-1\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => diceClick(\"playerOne\"),\n          children: playerOneDice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playerTwo\",\n      children: [\"playerTwo\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => diceClick(\"playerTwo\"),\n          children: playerTwoDice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 6\n    }, this), blockMaping.map((row, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `row${index + 1}`,\n          children: row.map((value, rowIndex) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `block-${rowIndex + 1}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: value.block,\n                \"data-for-ladder\": value.ladder,\n                \"data-for-snack\": value.snack,\n                children: [playerOneActiveIndex === value.block && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 64\n                }, this), playerTwoActiveIndex === value.block && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"@\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 64\n                }, this), value.block, /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"oneRed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"oneGreen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SnackGame, \"o2m/B8GoOyaKUhNTVV8tenDWaIs=\");\n\n_c = SnackGame;\nexport default SnackGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"SnackGame\");","map":{"version":3,"sources":["/home/gopal.salunkhe/Desktop/snackGame/snackgame/src/component/snackgame/index.js"],"names":["React","useState","SnackGame","blockMaping","require","playerOneActiveIndex","setPlayerOneActiveIndex","playerTwoActiveIndex","setPlayerTwoActiveIndex","playerOneDice","setPlayerOneDice","playerTwoDice","setPlayerTwoDice","activePlayer","setActivePlayer","diceClick","player","randomNumber","Math","floor","random","alert","map","row","index","value","rowIndex","block","ladder","snack"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\nconst SnackGame = () => {\n  let blockMaping = require(\"../../json/maping.json\");\n  const [playerOneActiveIndex, setPlayerOneActiveIndex] = useState(1);\n  const [playerTwoActiveIndex, setPlayerTwoActiveIndex] = useState(1);\n  const [playerOneDice, setPlayerOneDice] = useState(0)\n  const [playerTwoDice, setPlayerTwoDice] = useState(0)\n  const [activePlayer, setActivePlayer] = useState(\"playerOne\")\n\n  const diceClick = (player)=> {\n      debugger;\n      if(player == \"playerOne\" && activePlayer == \"playerOne\"){\n          let randomNumber = Math.floor(Math.random() * 6) + 1;\n          setPlayerOneDice(randomNumber)\n          setActivePlayer(\"playerTwo\")\n          if(playerOneActiveIndex+randomNumber <=100){\n            setPlayerOneActiveIndex(playerOneActiveIndex+randomNumber)\n          }else if(playerOneActiveIndex == 100){\n              alert(\"player One win\")\n          }\n      }else if(player == \"playerTwo\" && activePlayer == \"playerTwo\"){\n        let randomNumber = Math.floor(Math.random() * 6) + 1;\n        setPlayerTwoDice(randomNumber)\n        setActivePlayer(\"playerOne\")\n        if(playerTwoActiveIndex+randomNumber <=100){\n            setPlayerTwoActiveIndex(playerTwoActiveIndex+randomNumber)\n        }else if(playerTwoActiveIndex == 100){\n            alert(\"player Two win\")\n        }\n    }\n  }\n\n  return (\n    <div className=\"snake-game-container\">\n     <div className = \"playerOne\">\n     playerOne\n     <div className=\"dice-1\"><button onClick = {()=>diceClick(\"playerOne\")}>{playerOneDice}</button></div>\n     </div>\n     <div className = \"playerTwo\">\n     playerTwo\n     <div className=\"dice-2\"><button onClick = {()=>diceClick(\"playerTwo\")}>{playerTwoDice}</button></div>\n     </div>\n      {blockMaping.map((row, index) => {\n        return (\n          <>\n            <div className={`row${index + 1}`}>\n              {row.map((value, rowIndex) => {\n                return (\n                  <div className={`block-${rowIndex + 1}`}>\n                    <div\n                      id={value.block}\n                      data-for-ladder={value.ladder}\n                      data-for-snack={value.snack}\n                    >\n                      {playerOneActiveIndex === value.block && <span>#</span>}\n                      {playerTwoActiveIndex === value.block && <span>@</span>}\n                      {value.block}\n                      <div class=\"oneRed\"></div>\n                      <div class=\"oneGreen\"></div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </>\n        );\n      })}\n    </div>\n  );\n};\nexport default SnackGame;\n"]},"metadata":{},"sourceType":"module"}